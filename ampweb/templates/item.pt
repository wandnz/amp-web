<!--!
  This file is part of amp-web.

  Copyright (C) 2013-2017 The University of Waikato, Hamilton, New Zealand.

  Authors: Shane Alcock
           Brendon Jones

  All rights reserved.

  This code has been developed by the WAND Network Research Group at the
  University of Waikato. For further information please see
  http://www.wand.net.nz/

  amp-web is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License version 2 as
  published by the Free Software Foundation.

  amp-web is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with amp-web; if not, write to the Free Software Foundation, Inc.
  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

  Please report any bugs, questions or comments to contact@wand.net.nz
-->

<!-- macro to print certificate status if present -->
<tr metal:define-macro="print_certificate_status">
    <td class="col-md-1">
        <label class="control-label">Certificate Status</label>
    </td>

    <!-- if there is pki data then print the current certificate status -->
    <td tal:condition="'pki' in item">
        <!-- too difficult for us to deal with just now -->
        <div tal:condition="item.pki is None">
            It's complicated, check command line tools
        </div>

        <!-- no certificates are found -->
        <div tal:condition="item.pki is False">
            Unknown
        </div>

        <!-- no certificates are found -->
        <div tal:condition="item.pki == {}">
            No certficates found
        </div>

        <!-- valid signed certificate found -->
        <div tal:condition="item.pki and item.pki.status == 'valid'"
                class="btn-group">
            <!--
            <button type="button"
                    class="btn btn-default dropdown-toggle"
                    data-toggle="dropdown"
                    aria-haspopup="true" aria-expanded="false">
                Valid until ${item.pki.cert.expires}
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu">
                <li><button class="btn btn-link" onclick="revoke_certificate('${item.pki.cert.host}')">Revoke</button></li>
            </ul>
            -->
            Valid until ${item.pki.cert.expires}
        </div>

        <!-- no signed certificate, but pending signing request -->
        <div tal:condition="item.pki and item.pki.status == 'pending'"
                class="btn-group">
            <button type="button"
                    class="btn btn-default dropdown-toggle"
                    data-toggle="dropdown"
                    aria-haspopup="true" aria-expanded="false">
                Pending Review
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu">
                <li><button class="btn btn-link" onclick="sign_certificate('${item.pki.csr.host}')">Sign</button></li>
            </ul>
        </div>

        <!-- revoked certificate -->
        <div tal:condition="item.pki and item.pki.status == 'revoked'">
            Revoked ${item.pki.cert.revoked}
        </div>

        <!-- expired certificate -->
        <div tal:condition="item.pki and item.pki.status == 'expired'">
            Expired ${item.pki.cert.expires}
        </div>
    </td>

    <!-- if there is no pki data then we can't do much at all -->
    <td tal:condition="'pki' not in item">
        <div>Unknown</div>
    </td>
</tr>



<!-- macro to print chunked table rows of site/mesh names -->
<div tal:omit-tag="" metal:define-macro="print_chunked_items">
    <tr tal:repeat="chunk [members[i:i+n] for i in xrange(0, len(members), n)]">
        <!-- print all the items in this chunk / row -->
        <td tal:repeat="item chunk">
            <a href="${request.route_url(prefix, params='/view/%s' % item.urlname)}">
                ${item.longname}
                <span tal:condition="item.longname != item.ampname">
                    (${item.ampname})
                </span>
            </a>
        </td>
        <!-- if this is the last row then make sure there are enough cells -->
        <tal:block tal:condition="len(members) % n != 0">
            <td tal:repeat="i range(n - (len(members) % n))"></td>
        </tal:block>
    </tr>
</div>



<!-- macro to print a mesh or site name and link it appropriately -->
<div tal:omit-tag="" metal:define-macro="print_schedule_targets">
    <tal:block tal:repeat="target (item.sites + item.meshes)">
        <tal:block tal:condition="target.ampname in item.dest_mesh">
            <a href="${request.route_url('meshes', params='/view/%s' % target.urlname)}"
                class="mesh_link">${target.longname}</a>
        </tal:block>

        <tal:block tal:condition="target.ampname in item.dest_site">
            <a href="${request.route_url('sites', params='/view/%s' % target.urlname.split('!', 1)[0])}">
	    ${target.longname}</a>
        </tal:block>

        <tal:block tal:condition="not repeat.target.end">
        ,
        </tal:block>
    </tal:block>
</div>



<!-- macro to print a single scheduled test -->
<div tal:omit-tag="" metal:define-macro="print_schedule_item_row">

<tr class="schedule-${item.test} ${'danger' if not item.enabled else ''}">
    <!-- Edit button -->
    <td>
        <button tal:condition="can_edit and item.enabled" class="btn btn-xs"
            title="Test is enabled, click to disable"
            onclick="disable_test('${item.source.ampname}', ${item.id})">
            <span class="glyphicon glyphicon-ok"></span>
        </button>
        <button tal:condition="can_edit and not item.enabled" class="btn btn-xs"
            title="Test is disabled, click to enable"
            onclick="enable_test('${item.source.ampname}', ${item.id})">
            <span class="glyphicon glyphicon-ban-circle"></span>
        </button>
        <button tal:condition="can_edit" class="btn btn-xs"
                data-toggle="modal" data-target="#modal-foo"
                title="Click to edit test"
                href="${request.route_url('schedule_ui', params='/modify/%s/%s' % (item.source.urlname, item.id))}">
            <span class="glyphicon glyphicon-pencil"></span>
        </button>
    </td>

    <!-- Test type and arguments -->
    <td data-toggle="collapse" data-target=".collapse${item.id}">
        <b>${item.test}</b>
        <!--<div class="collapse${item.id} collapse schedule-info">${item.args}</div>-->
        <div class="collapse${item.id} collapse schedule-info">
            <tal:block tal:repeat="arg item.fullargs">
                <div>${arg}</div>
            </tal:block>
        </div>
    </td>

    <!-- Test frequency -->
    <td data-toggle="collapse" data-target=".collapse${item.id}">
        ${item.frequency}
    </td>

    <!-- Test period limitations -->
    <td data-toggle="collapse" data-target=".collapse${item.id}">
        <tal:block tal:condition="len(item.period) == 0 or item.period.startswith('Starting from')">
        Continuous
        </tal:block>
        <tal:block tal:condition="len(item.period) > 0 and not item.period.startswith('Starting from')">
        Limited
        </tal:block>
        <div class="collapse${item.id} collapse schedule-info">
            ${"%s" % item.period if len(item.period) > 0 else ""}
        </div>
    </td>

    <!-- Test targets, in brief and in full -->
    <td data-toggle="collapse" data-target=".collapse${item.id}">
        <!-- brief list of targets, for the top level display -->

        <!-- assume if there are no targets then the first arg is useful -->
        <tal:block tal:condition="len(item.sites)+len(item.meshes) == 0 and len(item.fullargs) > 0">
            <div>${item.fullargs[0]}</div>
        </tal:block>

        <!-- if there are only a few targets then display them all -->
        <tal:block tal:condition="len(item.sites)+len(item.meshes) <= 4">
            <div metal:use-macro="macros.print_schedule_targets"></div>
        </tal:block>

        <!-- if there are more then just print counts of targets -->
        <tal:block tal:condition="len(item.sites)+len(item.meshes) > 4">
            <tal:block tal:condition="len(item.sites) > 0">
                ${len(item.sites)}
                <tal:block tal:condition="len(item.sites) == 1">
                    site
                </tal:block>
                <tal:block tal:condition="len(item.sites) > 1">
                    sites
                </tal:block>
            </tal:block>

            <tal:block tal:condition="len(item.meshes) > 0">
                ${len(item.meshes)}
                <tal:block tal:condition="len(item.meshes) == 1">
                    mesh
                </tal:block>
                <tal:block tal:condition="len(item.meshes) > 1">
                    meshes
                </tal:block>
            </tal:block>

            <!-- full list of targets, for the detailed display -->
            <div class="collapse${item.id} collapse schedule-info">
                <div metal:use-macro="macros.print_schedule_targets"></div>
            </div>
        </tal:block>
    </td>

    <!-- Was this schedule item inherited through mesh membership -->
    <td data-toggle="collapse" data-target=".collapse${item.id}">
        <tal:block tal:condition="ampname != item.source.ampname">
            <a href="${request.route_url('meshes', params='/view/%s' % item.source.urlname)}" class="mesh_link">
                ${item.source.longname}
            </a>
        </tal:block>
    </td>
</tr>
</div>



<!-- macro to print a single scheduled test -->
<div tal:omit-tag="" metal:define-macro="print_full_test_name">
    <tal:block tal:condition="test == 'latency'">Latency</tal:block>
    <tal:block tal:condition="test == 'hops'">Traceroute</tal:block>
    <tal:block tal:condition="test == 'tput'">Throughput</tal:block>
    <tal:block tal:condition="test == 'http'">HTTP</tal:block>
    <tal:block tal:condition="test == 'youtube'">YouTube</tal:block>
    <tal:block tal:condition="test == 'external'">External</tal:block>
</div>


<div id="content" metal:define-macro="body">

    <div id="info" tal:define="prefix 'sites' if category == 'site' else 'meshes'">
        <h2>
            <button tal:condition="can_edit" class="btn btn-xs"
                    data-toggle="modal"
                    title="Click to edit ${category}"
                    data-target="#modal-foo"
                    href="${request.route_url(prefix, params='/modify/%s' % urlname)}">
                <span class="glyphicon glyphicon-pencil"></span>
            </button>
            <span data-toggle="collapse" data-target=".collapse-info"
                    role="button" onclick="$(this).find('span')
                        .toggleClass('glyphicon-collapse-down')
                        .toggleClass('glyphicon-collapse-up');">
                Information about ${category} ${item.longname}
                <span class="glyphicon glyphicon-collapse-up"></span>
            </span>
        </h2>
        <div class="collapse in collapse-info">
            <table class="table table-condensed table-hover table-striped">
                <tr>
                    <td class="col-md-1">
                        <label class="control-label">AMP Name</label>
                    </td>
                    <td class="col-md-4">${ampname}</td>
                </tr>
                <tr>
                    <td class="col-md-1">
                        <label class="control-label">Long Name</label>
                    </td>
                    <td class="col-md-4">${item.longname}</td>
                </tr>
                <tr tal:condition="category == 'site'">
                    <td class="col-md-1">
                        <label class="control-label">Location</label>
                    </td>
                    <td class="col-md-4">${item.location}</td>
                </tr>
                <tr>
                    <td class="col-md-1">
                        <label class="control-label">Description</label>
                    </td>
                    <td class="col-md-4">${item.description}</td>
                </tr>
                <tr tal:condition="category == 'mesh'">
                    <td class="col-md-1">
                        <label class="control-label">Show on Matrix</label>
                    </td>
                    <td class="col-md-4">${'Yes' if item.public else 'No'}</td>
                </tr>
                <tr tal:condition="category == 'mesh'">
                    <td class="col-md-1">
                        <label class="control-label">Mesh is Source</label>
                    </td>
                    <td class="col-md-4">${'Yes' if item.is_src else 'No'}</td>
                </tr>
                <tr tal:condition="category == 'mesh'">
                    <td class="col-md-1">
                        <label class="control-label">Tests to Show</label>
                    </td>
                    <td tal:condition="len(item.tests) > 0" class="col-md-4">
                        <tal:block tal:repeat="test item.tests">
                            <div tal:omit-tag="" metal:use-macro="macros.print_full_test_name">
                            </div>
                        </tal:block>
                    </td>
                    <td tal:condition="len(item.tests) == 0" class="col-md-4">
                        None
                    </td>
                </tr>
                <!--
                <tr>
                    <td class="col-md-1">
                        <label class="control-label">Active</label>
                    </td>
                    <td class="col-md-4"></td>
                </tr>
                -->
                <tr tal:condition="category == 'site'">
                    <td class="col-md-1">
                        <label class="control-label">
                            AMP Client Configuration
                        </label>
                    </td>
                    <td>
                        <a href="${request.route_url('config', name=urlname)}">
                            <span class="glyphicon glyphicon-cog"></span>
                            View client configuration script
                        </a>
                </tr>
                <tr tal:condition="category == 'site'">
                    <td class="col-md-1">
                        <label class="control-label">AMP Client Schedule</label>
                    </td>
                    <td>
                        <a href="${request.route_url('yaml', name=urlname)}">
                            <span class="glyphicon glyphicon-time"></span>
                            View raw YAML schedule
                        </a>
                    </td>
                </tr>

                <tr tal:condition="category == 'site'"
                        metal:use-macro="macros.print_certificate_status">
                </tr>
            </table>
        </div>
    </div>

    <!-- list all the sites that belong to this mesh, or all the meshes that
         this site belongs to, depending on what is being viewed
    -->
    <div id="membership" tal:define="prefix 'meshes' if category == 'site' else 'sites'">
        <h2>
            <button tal:condition="can_edit"
                    tal:define="prefix 'meshes' if category == 'mesh' else 'sites'"
                    class="btn btn-xs" data-toggle="modal"
                    data-target="#modal-foo"
                    title="Click to edit mesh membership"
                    href="${request.route_url(prefix, params='/member/%s' % urlname)}">
                <span class="glyphicon glyphicon-pencil"></span>
            </button>
            <span data-toggle="collapse" data-target=".collapse-membership"
                    role="button" onclick="$(this).find('span')
                        .toggleClass('glyphicon-collapse-down')
                        .toggleClass('glyphicon-collapse-up');">
                <tal:block tal:condition="category == 'mesh'">
                    Members of mesh ${item.longname}
                </tal:block>
                <tal:block tal:condition="category == 'site'">
                    Meshes ${item.longname} belongs to
                </tal:block>
                <span class="glyphicon glyphicon-collapse-up"></span>
            </span>
        </h2>
        <div class="collapse in collapse-membership">
            <p tal:condition="len(members) == 0">None</p>

            <table tal:condition="len(members) > 0" class="table table-condensed table-hover table-striped">
                <tal:block tal:condition="len(members) <= 5">
                    <tal:block tal:define="n 1">
                        <div tal:omit-tag="" metal:use-macro="macros.print_chunked_items">
                        </div>
                    </tal:block>
                </tal:block>

                <tal:block tal:condition="len(members) > 5 and len(members) <= 10">
                    <tal:block tal:define="n 2">
                        <div tal:omit-tag="" metal:use-macro="macros.print_chunked_items">
                        </div>
                    </tal:block>
                </tal:block>

                <tal:block tal:condition="len(members) > 10">
                    <tal:block tal:define="n 3">
                        <div tal:omit-tag="" metal:use-macro="macros.print_chunked_items">
                        </div>
                    </tal:block>
                </tal:block>
            </table>
        </div>
    </div>


    <div id="schedule">
        <h2>
            <button tal:condition="can_edit" class="btn btn-xs"
                    data-toggle="modal"
                    data-target="#modal-foo"
                    title="Click to schedule new test"
                    href="${request.route_url('schedule_ui', params='/add/%s' % urlname)}">
                <span class="glyphicon glyphicon-plus"></span>
            </button>
            <span data-toggle="collapse" data-target=".collapse-schedule"
                    role="button" onclick="$(this).find('span')
                        .toggleClass('glyphicon-collapse-down')
                        .toggleClass('glyphicon-collapse-up');">
                Tests scheduled from ${category} ${item.longname}
                <span class="glyphicon glyphicon-collapse-up"></span>
            </span>
        </h2>

    <div class="collapse in collapse-schedule">

        <p tal:condition="len(schedule) == 0">None</p>

        <table tal:condition="len(schedule)" class="table table-condensed table-hover table-striped">
        <thead>
            <tr>
                <th class="col-md-1"></th>
                <th class="col-md-2">Test</th>
                <th class="col-md-1">Frequency</th>
                <th class="col-md-2">Period</th>
                <th class="col-md-4">Target</th>
                <th class="col-md-2">Inherited From</th>
            </tr>
        </thead>

        <tbody>
            <!-- list all schedules -->
            <div tal:repeat="item schedule">
                <div metal:use-macro="macros.print_schedule_item_row"></div>
            </div>
        </tbody>
        </table>
    </div>


<script type="text/javascript">
    /* remove the data in the modal to force it to be reloaded each time */
    $("#modal-foo").on("hide.bs.modal", function(e) {
        $(this).removeData("bs.modal").find(".modal-content").empty();
    });
</script>
    </div>

</div> <!-- content -->
