###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/environment.html
###

[app:main]
use = egg:amp-web

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes =
    pyramid_tm

sqlalchemy.url = sqlite:///%(here)s/amp-web.sqlite

# Authentication secret (should be different for each site!)
auth.secret = CHANGEME

# If set to 'yes', then the user must agree to the terms of service when they
# log in to the website
auth.showtos = no

# If set to 'yes', then the data is available to anyone, even if they are not
# logged in. If set to 'no' then only authenticated users can view data.
auth.publicdata = yes

# amp-web specific settings
ampweb.nntschost = localhost
ampweb.nntscport = 61234

# Set this to 'yes' if you do not have an event database generated by
# netevmon, or do not wish to have events appear on the graphs. Disabling
# events will also automatically disable the dashboard.
ampweb.disableevents = yes

# Set this to 'yes' to remove the event frequency graphs and the table of
# most frequent events from the dashboard. Handy if you just want a relatively
# slim dashboard for display alongside other monitoring apps.
ampweb.hidedashgraphs = no

# Enable and update these if you need to connect to a remote netevmon database
ampweb.eventdb = netevmon
#ampweb.eventdbhost =
#ampweb.eventdbuser =
#ampweb.eventdbpwd =
#ampweb.eventdbport =

# Enable and update these if you need to connect to a remote AMP meta-database
ampweb.ampdb = ampmeta
# ampweb.ampdbhost =
# ampweb.ampdbuser =
# ampweb.ampdbpwd =
# ampweb.ampdbport =

# Enable and update these if you need to connect to a remote views database
ampweb.viewdb = views
# ampweb.viewdbhost =
# ampweb.viewdbuser =
# ampweb.viewdbpwd =
# ampweb.viewdbport =

# Enable and update these if you need to connect to a remote ASN database
ampweb.asdb = amp-asdb
# ampweb.asdbhost =
# ampweb.asdbuser =
# ampweb.asdbpwd =
# ampweb.asdbport =

# The title to appear in the large banner at the top of every page
ampweb.projecttitle = Active Measurement Project

# If set to 'yes', a link to the event dashboard will appear at the top of
# every page. Disable if you are not running netevmon on the AMP data.
ampweb.showdash = yes

# If set to 'yes', a link to the matrix will appear at the top of
# every page. Disable if you are not using meshes to group test sources
# or targets.
ampweb.showmatrix = yes

# Set to your Google Analytics tracking ID to add the global tracking
# snippet to the top of each page: https://developers.google.com/analytics/
# ampweb.gtag =

# If this option is set, logged-in users will be able to rate the
# quality of events shown on the dashboard or graphs. The event ratings
# will be written to the file provided as the option value.
#ampweb.eventratingfile = /tmp/eventratings.txt

# Remove/add items to this list to change which collections appear on the
# graph browser page. Not specifying this option or providing an empty list
# will result in all collections being displayed
ampweb.browsercollections = amp-icmp, amp-http, amp-throughput, amp-traceroute, amp-dns, amp-tcpping, amp-httppagesize

# Remove/add items to this list to change which tabs appear on the matrix page.
# Note that tabs will appear in the same order as they do in the list.
ampweb.matrixtabs = latency,loss,hops,http,httpsize,throughput

# These options determine the time period (in seconds) that should be covered
# by each matrix. For example, if you want your matrix cells to be coloured
# based on the last 10 minutes of data, set the appropriate option to 600.
ampweb.matrixperiod.http = 3600
ampweb.matrixperiod.latency = 600
ampweb.matrixperiod.tput = 7200
ampweb.matrixperiod.hops = 600

# These options can be used to control the minimum binsize (in seconds) that
# will be used when aggregating data for display on the main graphs. These
# options are useful if you are testing less frequently as setting a higher
# minimum binsize will prevent amp-web from creating empty bins for time
# periods where there was no scheduled test. Ideally, you want to set these to
# be at least the minimum frequency at which you run the corresponding tests.

# The default values given here are the binsizes that will be used if you
# do not set these options. Latency and loss are both covered by latency.
#ampweb.minbin.latency = 60
#ampweb.minbin.traceroute = 60
#ampweb.minbin.http = 900
#ampweb.minbin.udpstream = 300
#ampweb.minbin.throughput = 3600


[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, ampweb, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_ampweb]
level = WARN
handlers =
qualname = ampweb

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
